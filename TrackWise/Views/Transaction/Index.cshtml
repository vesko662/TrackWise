@using System.ComponentModel.DataAnnotations
@model TransactionCreateDto

@{
    ViewData["Title"] = "Add Transaction";
}

<link rel="stylesheet" href="~/css/transaction.css" asp-append-version="true" />
<div class="alert alert-warning alert-dismissible fade show" role="alert">
    Transaction must be in the <strong>same currency</strong> as the portfolio
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
<div class="porfolioContaner">
    <div class="transaction-form">
        <h4 class="mb-4">Add Transaction</h4>

        <form asp-action="Create" method="post">
            <input asp-for="PortfolioId" type="hidden" />
            <span asp-validation-for="PortfolioId" class="text-danger"></span>

            <div class="mb-3">
                <label class="form-label">Transaction Type</label>
                <div class="btn-group w-100" role="group" aria-label="Transaction Type">
                    <input type="radio" class="btn-check" asp-for="Type" id="buy" value="1" autocomplete="off" checked>
                    <label class="btn btn-outline-success" for="buy">Buy</label>

                    <input type="radio" class="btn-check" asp-for="Type" id="sell" value="2" autocomplete="off">
                    <label class="btn btn-outline-danger" for="sell">Sell</label>
                </div>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label class="form-label">Asset Type</label>
                <select id="assetTypeFilter" class="form-select">
                    <option value="">All</option>
                    @foreach (var e in Enum.GetValues(typeof(AssetType)).Cast<AssetType>())
                    {
                        var display = e.GetType()
                        .GetMember(e.ToString())
                        .First()
                        .GetCustomAttributes(false)
                        .OfType<DisplayAttribute>()
                        .FirstOrDefault()?.Name ?? e.ToString();

                        <option value="@e.ToString().ToLower()">@display</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label asp-for="AssetId" class="form-label">Asset</label>
                <select asp-for="AssetId" id="AssetId" class="form-select select2-ajax"></select>
                <span asp-validation-for="AssetId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Quantity" class="form-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Price" class="form-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Created" class="form-label"></label>
                <input asp-for="Created" type="date" class="form-control"
                       value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="Created" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="javascript:history.back()" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(function () {
            let $assetSelect = $('.select2-ajax');

            function initSelect2() {
                $assetSelect.select2({
                    placeholder: 'Search assets...',
                    ajax: {
                        url: '/api/assets/search',
                        dataType: 'json',
                        delay: 250,
                        data: function (params) {
                            return {
                                query: params.term,
                                type: $('#assetTypeFilter').val()
                            };
                        },
                        processResults: function (data) {
                            return { results: data };
                        },
                        cache: true
                    },
                    minimumInputLength: 1
                })
                .on('change', function () {
                    $(this).valid(); 
                });
            }

            initSelect2();

            $('#assetTypeFilter').on('change', function () {
                $assetSelect.val(null).trigger('change');
            });
        });
    </script>
}
